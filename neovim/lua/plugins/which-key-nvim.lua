require('which-key').add({
  { "<Leader>b",  group = "(B)uffers" },
  { "<Leader>ba", desc = "Open (A)ll Buffers" },
  { "<Leader>bb", desc = "Open (B)uffer..." },

  { "<Leader>c",  mode = { "n", "x" },                                     group = "(C)opy" },
  { "<Leader>cP", desc = "Copy Absolute (P)ath to Clipboard" },
  { "<Leader>cc", mode = "n",                                              desc = "(C)opy Buffer to Clipboard" },
  { "<Leader>cc", mode = "x",                                              desc = "(C)opy Selection to Clipboard" },
  { "<Leader>cp", desc = "Copy (P)ath to Clipboard" },

  { "<Leader>d",  group = "(D)iagnostics" },
  { "<Leader>dl", desc = "Open Diagnostics in (L)ocation List" },
  { "<Leader>dn", desc = "(N)ext Diagnostic" },
  { "<Leader>do", desc = "(O)pen Diagnostic Under Cursor" },
  { "<Leader>dp", desc = "(P)revious Diagnostic" },
  { "<Leader>dq", desc = "Open Diagnostics in (Q)uickfix List" },

  { "<Leader>f",  group = "(F)iles" },
  { "<Leader>fe", desc = "Open File (E)xplorer" },
  { "<Leader>ff", desc = "Open (F)ile..." },
  { "<Leader>fg", desc = "Open File in (G)it..." },

  { "<Leader>l",  group = "(L)ocation List" },
  { "<Leader>ll", desc = "Toggle (L)ocation List" },
  { "<Leader>ln", desc = "(N)ext Location List Item" },
  { "<Leader>lp", desc = "(P)revious Location List Item" },

  { "<Leader>r",  group = "(R)efactor" },
  { "<Leader>rr", desc = "Smart (R)ename" },
  { "<Leader>rR", desc = "(R)ename (Scalpel)" },
  { "<Leader>ra", desc = "Code (A)ctions..." },
  { "<Leader>rl", desc = "(L)ayout" },
  { "<Leader>ro", desc = "(O)rganize Imports" },

  { "<Leader>s",  group = "(S)earch" },
  { "<Leader>sl", desc = "(S)earch to (L)ocation List (Ferret)" },
  { "<Leader>sr", desc = "(R)eplace in Results (Ferret)" },
  { "<Leader>ss", desc = "(S)earch (Ferret)" },
  { "<Leader>sw", desc = "Search for the (W)ord Under the Cursor (Ferret)" },

  { "<Leader>t",  group = "(T)oggle / Cycle" },
  { "<Leader>tc", desc = "Cycle (C)olumn Width" },
  { "<Leader>ti", desc = "Cycle (I)ndentation Mode" },
  { "<Leader>tp", desc = "Toggle Auto(P)airs" },

  { "<Leader>v",  group = "(V)im" },
  { "<Leader>vr", desc = "(R)eload vimrc" },
  { "<Leader>vv", desc = "Open (V)imrc in Tab" },

  { "<Leader>w",  group = "(W)indow" },
  { "<Leader>w+", desc = "Increase Window Height" },
  { "<Leader>w-", desc = "Decrease Window Height" },
  { "<Leader>w<", desc = "Decrease Window Width" },
  { "<Leader>w>", desc = "Increase Window Width" },
  { "<Leader>wH", desc = "Swap Window Left" },
  { "<Leader>wJ", desc = "Swap Window Down" },
  { "<Leader>wK", desc = "Swap Window Up" },
  { "<Leader>wL", desc = "Swap Window Right" },
  { "<Leader>wR", desc = "(R)otate Windows Counter-clockwise" },
  { "<Leader>wh", desc = "Move Window Left" },
  { "<Leader>wj", desc = "Move Window Down" },
  { "<Leader>wk", desc = "Move Window Up" },
  { "<Leader>wl", desc = "Move Window Right" },
  { "<Leader>wo", desc = "Close (O)ther Windows" },
  { "<Leader>wq", desc = "Close Current Window" },
  { "<Leader>wr", desc = "(R)otate Windows Clockwise" },
  { "<Leader>ww", desc = "Resize (W)indows Equally" },
  { "<Leader>wx", desc = "E(x)change Window with Next" },

  { "<Leader>q",  group = "(Q)uick Fix List" },
  { "<Leader>qq", group = "Toggle (Q)uick Fix List" },
  { "<Leader>qn", group = "(N)ext Quick Fix List Item" },
  { "<Leader>qp", group = "(P)revious Quick Fix List Item" },
})
